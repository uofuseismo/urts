
// This file strutures pages and modules into a convenient hierarchical structure.

namespace URTS {


/** \page index Overview */

/** \defgroup Modules_chapter Modules */

/** \defgroup Modules_Broadcasts Broadcasts 
    \brief Broadcasts are publisher-subscriber messaging patterns.  In this case there are producer(s) that create content and subscriber(s) that consume content.
    \ingroup Modules_chapter */
/** \defgroup Modules_Broadcasts_Import Import Broadcasts
    \brief These are modules for importing data from other utilities and broadcasting these products to a URTS broadcast.
    \ingroup Modules_Broadcasts  */

/** \defgroup Modules_Services Services
    \brief Services are request-reply messaging patterns.  In this case there are client(s) that make a request and server(s) that process those requests. */
/** \defgroup Modules_Services_Standalone Standalone Services
    \brief Standalone services are services of which there should be only one instance.  For example, an incrementer is a standalone service because to have multiple instances could result in multiple `unique' values.
    \ingroup Modules_Services */
/** \defgroup Modules_Services_UUSS_Standalone UUSS Standalone Services
    \brief These are standalone services that are specific to UUSS operations.
    \ingroup Modules_Services */
/** \defgroup Modules_Services_Scalable Scalable Services
    \brief Scalable services are services which can have multiple instances.  The intermediate proxy will distribute work to the servers; likely via round-robin scheduling.  Therefore, each server instance must be independent of the other instances (stateless) and be identically configured.
    \ingroup Modules_Services */
/** \defgroup Modules_Services_UUSS_Scalable UUSS Scalable Services
    \brief These are scalable services that are specific to UUSS.  For example, here you would find our machine learning models.
    \ingroup Modules_Services */

}
